# Default values for medplum.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  cloudProvider: '' # Supported values: gcp, azure
  configSource:
    # Examples:
    # type: "env"
    # type: "aws:region:parameterName"
    # type: "gcp:projectId:secretId"
    # type: "azure:keyVaultURL:secretName"
    type: 'env' # Default to env

frontend:
  enabled: true
  autoscaling:
    enabled: false
  service:
    type: 'LoadBalancer' # Can be ClusterIP, NodePort, or LoadBalancer
    port: 3000
  serviceAccount:
    create: true
    automount: true
    # Annotations to add to the service account
    # Set your Google Cloud Platform service account (e.g., medplum-server@[MY_PROJECT_ID].iam.gserviceaccount.com)
    # iam.gke.io/gcp-service-account: ""
    # Set your Azure Managed Identity Client ID for Azure workload identity
    # azure.workload.identity/client-id: ""
    annotations: {}
  ingress:
    enabled: true
    host: 'app.example.com'
    annotations: {}
  deployment:
    replicaCount: 1
  image:
    repository: medplum/medplum-app
    tag: latest

backend:
  enabled: true
  autoscaling:
    enabled: false
  service:
    type: 'LoadBalancer' # Can be ClusterIP, NodePort, or LoadBalancer
    port: 8103
  serviceAccount:
    create: true
    automount: true
    # Annotations to add to the service account
    # Set your Google Cloud Platform service account (e.g., medplum-server@[MY_PROJECT_ID].iam.gserviceaccount.com)
    # iam.gke.io/gcp-service-account: ""
    # Set your Azure Managed Identity Client ID for Azure workload identity
    # azure.workload.identity/client-id: ""
    annotations: {}
  ingress:
    enabled: true
    host: 'api.example.com'
    annotations: {}
  config:
    # These are the default values for a local deployment
    # You should change these values for your own environment
    # See: https://www.medplum.com/docs/self-hosting/config-settings
    port: 8103
    baseUrl: 'http://localhost:8103/'
    appBaseUrl: 'http://localhost:3000/'
    binaryStorage: 'file:./binary/'
    storageBaseUrl: 'http://localhost:8103/storage/'
    signingKeyId: 'my-key-id'
    signingKey: "-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: DES-EDE3-CBC,4C2E1B45FFF24610\n\n0SOZn3P0Bd9lZgv2eSWWLMQ4JqxhbJ+dWM+V1TtSwqxe3VP24z4bys5VRpmsEpqn\nROKxdXCeqAbYsLo8V9dOQvwaxo2TTWFgUFj7sQYklyr1g5S9+KCp+1B/5E7UgNDd\nhXA2u4uhz6Bck0mTPwoy3oHjNUaNBZilMdwiR3qeiGYC0DyX69+IJgwFUTt2a1jc\nU5aUyellGYa47QRZcePgyk7Cl4FcBW9YA0pS4rNpO4wNVN6GGuZti4c0Y3PHXSRE\nDse95ZN9iWBtufjpjk4s8MX0rzqMWcjbAhTs2N5YBgKsv2czm5YMdXsYH6tGL7a1\nPyNia0r1AnHAD3pK+vzaZGaLrvubZikrt7dr+Tp1U45b2YaZlMMaXwGU6WEK7kwr\n4sbl9hqQf/+oqBAdyJIgxIhFumK+ukUIlCV+b/XUuoatDXD127JwEyEM78Nzg5Bc\n/bKGEo9uehXpuIi0jp1BtegUIkfoV543PZZgslGVdzq0vXOir+PiHJBLlbWXXSAb\nEWKOQW2/bZ8JIHhi3Ag7KDlTVF1XetJ2TqYOOP9izfMp4lJ2vLtkH7P+jEKG8z6b\nurnXYkDWYEbzhG1frEssVQN0GP3wdyEK+n6LBCuj52Uje/M7LwahPX6dJRYPOpL9\nbApSNNJLahRRQREHp1wqEWism3r4+yRa4ha/BGc4dfKTsUtJEiHqdWvDzomN5C6A\nC7u3zjUv3ZZLoCLCbBUsiVdlJZJ5u/ymky5LKVbsscmZj93HE7/FL56I17bmTlDo\npvkJWk9SmVXvs3lwMMBRbykj974ZWEMw9EjCoP9rDJ0UNsy2kVRFfXoPMKL5S01D\niBRVSZB7k7qJofGtlBpDfooHOw4uAJ/6A0l8vpOm/Vpk8tdiRLL/RuzEKz5G3ltm\nrXPn83avfNc5+EvaM8IIKyPTvHegE5XszGK3NNlzUO1Ydze/xQPhdrp4QYFzJOuB\nXVIazLeXSJ5EjJ1ylWAWgNzsx+42NWeA2CZAZz+IJFw6C2iHEB8f8Nw6iJmFfm3I\nWsrvCRbuwIsW9fjtHTpOCCpxXu5EcvN5BKwFXeBatB7xqR6EnPbk6xDxZdroEKhH\nEZU4PlHu+BwTKKCwa4Ynwn1Qpu453qgNzaxgHLbdFipW5/AkreNWK5Il+5Bl8G90\no/MhO66eBXv3JbOtMUAqs9+Qyl5K1TaNqbStWmsiq+36Niz4ZRg7L/7W6zjG/hTH\npignoDyJYPjFFQ/sTsTUv0oKVI6KIYFlIHBDnGGnH09926sd+U/isSeMDP+Qa32m\nhHzScmDPsdyjdFsdXsJjZHe7mqCijGXu/LW4CoWoqln4y29c5BMJazwnIwegrLjJ\nQeW6InUhGZLy+uJbs1ZWxlqzOmMoTx2VVgoABdOHn/mQEC/AreUdvPMkVVYEuxel\nmAMOoefncx/EPxn7gY2SrEdmSnk9VuzR30KMC1qSw196QbQHR1G2vxKcXPwe/LH9\n7Pa0gwwqCaS2ggYt5Rvlxm7DeBIGHzGtPILnl1qyVGaqn64244JeLi9bY/O+E+uq\nBSgQmt2NwPK2RQgzzt/ETUXoOFHKiwS1v2Vp4H2PPDI8CzvlRralsQ==\n-----END RSA PRIVATE KEY-----"
    signingKeyPassphrase: 'top_secret'
    supportEmail: '"Medplum" <support@medplum.com>'
    googleClientId: '397236612778-c0b5tnjv98frbo1tfuuha5vkme3cmq4s.apps.googleusercontent.com'
    googleClientSecret: ''
    recaptchaSiteKey: '6LfHdsYdAAAAAC0uLnnRrDrhcXnziiUwKd8VtLNq'
    recaptchaSecretKey: '6LfHdsYdAAAAAH9dN154jbJ3zpQife3xaiTvPChL'
    vmContextBotsEnabled: true
    defaultBotRuntimeVersion: 'vmcontext'
    allowedOrigins: '*'
    introspectionEnabled: true
    database:
      host: 'host.docker.internal'
      port: 5432
      dbname: 'medplum'
      username: 'medplum'
      password: 'medplum'
    redis:
      host: 'host.docker.internal'
      port: 6379
      password: 'medplum'
  deployment:
    replicaCount: 1
    image:
      repository: medplum/medplum-server
      tag: latest
    env:
      # - name: SQL_DEBUG
      #   value: '*'
    resources:
      requests:
        memory: '1Gi'
        cpu: '500m'
      limits:
        memory: '2Gi'
        cpu: '1000m'
    # Structure this deployment.sidecar value as if you were adding the container
    # to the Deployment's spec.template.spec.containers key.
    sidecars: []

# Security contexts for pods and containers
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

# Pod Disruption Budget settings
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  # Alternative: maxUnavailable: 1

# ingress:
#   deploy: true
#   # Set your domain name (e.g., medplum.example.com)
#   domain: ''
#   # Set your TLS secret name (Azure only)
#   tlsSecretName: ''

# ingress:
#   enabled: true
#   secretName: 'my-app-tls-secret'
#   app:
#     host: 'app.example.com'
#   api:
#     host: 'api.example.com'

# Ingress configuration
ingress:
  enabled: true
  # Set your ingress class name
  # Options:
  #   - nginx
  #   - alb - AWS Application Load Balancer
  #   - azure-application-gateway - For Azure's Application Gateway
  #   - "gce" - Google Cloud Platform
  className: 'nginx' # Customer's ingress class name
  annotations: {} # Customer can add their own annotations here
  # annotations:
  #   ingressClassName: "gce"
  #   kubernetes.io/ingress.global-static-ip-name: medplum-external-ip
  #   networking.gke.io/managed-certificates: {{ include "medplum.fullname" . }}
  #   networking.gke.io/v1beta1.FrontendConfig: {{ include "medplum.fullname" . }}
  # hosts:
  #   - host: 'my-app.my-customer.com'
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls:
  #   - secretName: my-app-tls-secret
  #     hosts:
  #       - 'my-app.my-customer.com'
